

--CAP NHAT POINT_MONTH CHO STATISTIC_TRACK
UPDATE STATISTIC_TRACK
	SET POINT_MONTH = (CLICK_MONTH * (SELECT TOP 1 CLICK FROM FORMULA_HOT) + 
					   BUY_MONTH * (SELECT TOP 1 BUY FROM FORMULA_HOT)) / 100



--CAP NHAT POINT_MONTH CHO STATISTIC_ARTIST
UPDATE STATISTIC_ARTIST
	SET POINT_MONTH = (CLI_PER_MON * (SELECT TOP 1 CLICK FROM FORMULA_HOT) + 
					   BUY_PER_MON * (SELECT TOP 1 BUY FROM FORMULA_HOT)) / 100



--XEP HANG DJ

INSERT INTO TOP_6_DJ

SELECT ROW_NUMBER() OVER (ORDER BY POINT_MONTH DESC) AS RK,
	   ID_ARTIST AS IA,
	    ARTIST.NAME,
		ARTIST.IMG

FROM STATISTIC_ARTIST , ARTIST

WHERE POINT_MONTH IN ( SELECT TOP 6 TEMP.T 
						FROM (SELECT POINT_MONTH AS T FROM STATISTIC_ARTIST ) TEMP 
						ORDER BY TEMP.T DESC) 
	  AND ID_ARTIST = ID





--LAY DANH SACH TRACK MOI

INSERT INTO NEW_TRACK
SELECT TOP 56 ID , NAME , LINK_IMG , LINK , ROW_NUMBER() OVER(ORDER BY DATE_RELEASE DESC) AS RANKK FROM TRACK

SELECT ID_ARTIST , ARTIST.NAME , LABEL.NAME 
FROM TRACK_ARTIST , ARTIST , LABEL 
WHERE ID_TRACK = 9 AND ID_ARTIST = ARTIST.ID AND LABEL.ID = ARTIST.ID_NOW_LABEL


--SET NAME ARTIST AND NAME LABEL

SELECT * FROM TRACK_ARTIST

DECLARE @TEMP INT
SET @TEMP = 8;
WHILE @TEMP < 40
BEGIN
	UPDATE TRACK_ARTIST 
	SET NAME_LABEL = (SELECT LABEL.NAME FROM ARTIST , LABEL WHERE ARTIST.ID = @TEMP AND LABEL.ID = ARTIST.ID_NOW_LABEL)
	WHERE ID_ARTIST = @TEMP;

	SET @TEMP = @TEMP  +1;
END


--SET COST CHO NEW TRACK

DECLARE @TEMP INT
SET @TEMP = 1;
WHILE @TEMP < 73
BEGIN
	UPDATE TRACK_ARTIST
	SET COST = (SELECT COST FROM TRACK WHERE ID = @TEMP)
	WHERE ID_TRACK = @TEMP;

	SET @TEMP = @TEMP  +1;
END








		
		
													