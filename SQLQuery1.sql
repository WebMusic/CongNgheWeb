

--CAP NHAT POINT_MONTH CHO STATISTIC_TRACK
UPDATE STATISTIC_TRACK
	SET POINT_MONTH = (CLICK_MONTH * (SELECT TOP 1 CLICK FROM FORMULA_HOT) + 
					   BUY_MONTH * (SELECT TOP 1 BUY FROM FORMULA_HOT)) / 100



--CAP NHAT POINT_MONTH CHO STATISTIC_ARTIST
UPDATE STATISTIC_ARTIST
	SET POINT_MONTH = (CLI_PER_MON * (SELECT TOP 1 CLICK FROM FORMULA_HOT) + 
					   BUY_PER_MON * (SELECT TOP 1 BUY FROM FORMULA_HOT)) / 100



--XEP HANG DJ

INSERT INTO TOP_6_DJ

SELECT ROW_NUMBER() OVER (ORDER BY POINT_MONTH DESC) AS RK,
	   ID_ARTIST AS IA,
	    ARTIST.NAME,
		ARTIST.IMG

FROM STATISTIC_ARTIST , ARTIST

WHERE POINT_MONTH IN ( SELECT TOP 6 TEMP.T 
						FROM (SELECT POINT_MONTH AS T FROM STATISTIC_ARTIST ) TEMP 
						ORDER BY TEMP.T DESC) 
	  AND ID_ARTIST = ID





--LAY DANH SACH TRACK MOI

INSERT INTO NEW_TRACK
SELECT TOP 56 ID , NAME , LINK_IMG , LINK , ROW_NUMBER() OVER(ORDER BY DATE_RELEASE DESC) AS RANKK FROM TRACK

SELECT ID_ARTIST , ARTIST.NAME , LABEL.NAME 
FROM TRACK_ARTIST , ARTIST , LABEL 
WHERE ID_TRACK = 9 AND ID_ARTIST = ARTIST.ID AND LABEL.ID = ARTIST.ID_NOW_LABEL


--SET NAME ARTIST AND NAME LABEL

SELECT * FROM TRACK_ARTIST

DECLARE @TEMP INT
SET @TEMP = 8;
WHILE @TEMP < 40
BEGIN
	UPDATE TRACK_ARTIST 
	SET NAME_LABEL = (SELECT LABEL.NAME FROM ARTIST , LABEL WHERE ARTIST.ID = @TEMP AND LABEL.ID = ARTIST.ID_NOW_LABEL)
	WHERE ID_ARTIST = @TEMP;

	SET @TEMP = @TEMP  +1;
END


--SET COST CHO NEW TRACK

DECLARE @TEMP INT
SET @TEMP = 1;
WHILE @TEMP < 73
BEGIN
	UPDATE TRACK_ARTIST
	SET COST = (SELECT COST FROM TRACK WHERE ID = @TEMP)
	WHERE ID_TRACK = @TEMP;

	SET @TEMP = @TEMP  +1;
END



--Split String
SELECT LINK_IMG FROM TRACK




--INSERT IN REMIX

INSERT INTO REMIX( NAME , TEMPO , KEY_ , COST , LINK , DATE_RELEASE , LINK_IMG , ID_TRACK )
			SELECT NAME , TEMPO , KEY_ , COST + 0.4 , LINK , DATE_RELEASE , LINK_IMG,  ID FROM TRACK WHERE ID >37 AND ID < 72

--INSERT IN REMIX_ARTIST

INSERT INTO REMIX_ARTIST ( ID_REMIX , ID_ARTIST , NAME_ARTIST , NAME_LABEL , COST )
		SELECT ID , (SELECT ARTIST.ID , ARTIST.NAME , LABEL.NAME  
							FROM ARTIST , LABEL 
								WHERE ARTIST.ID_NOW_LABEL = LABEL.ID AND ARTIST.ID = ( SELECT FLOOR(RAND()*(39-8)+8)) ) , COST FROM REMIX
		

--INSERT INTO REMIX_ARTIST
INSERT INTO REMIX_ARTIST ( ID_REMIX , ID_ARTIST , NAME_ARTIST , NAME_LABEL , COST )
		SELECT REMIX.ID , ARTIST.ID , ARTIST.NAME , LABEL.NAME , REMIX.COST
			FROM ARTIST , LABEL , REMIX
				WHERE ARTIST.ID_NOW_LABEL = LABEL.ID AND ARTIST.ID = ( SELECT FLOOR(RAND()*(39-8)+8))

--UPDATE REMIX_ARTIST ID_ARTIST , NAME_ARTIST , LABEL_ARTIST
DECLARE @TEMP INT
DECLARE @VAR INT
SET @TEMP = 1;
WHILE @TEMP < 162
BEGIN
	SET @VAR = (SELECT FLOOR(RAND()*(39-8)+8))
	UPDATE REMIX_ARTIST 
		SET ID_ARTIST = @VAR 
			WHERE ID_REMIX = @TEMP;

	SET @TEMP = @TEMP  +1;
END		
		
DECLARE @TEMP INT
SET @TEMP = 1;
WHILE @TEMP < 162
BEGIN
	UPDATE REMIX_ARTIST
		SET NAME_ARTIST = (SELECT ARTIST.NAME FROM ARTIST , REMIX_ARTIST WHERE ARTIST.ID = REMIX_ARTIST.ID_ARTIST AND REMIX_ARTIST.ID_REMIX = @TEMP) 
			WHERE ID_REMIX = @TEMP;

	SET @TEMP = @TEMP  +1;
END							


DECLARE @TEMP INT
SET @TEMP = 1;
WHILE @TEMP < 162
BEGIN
	UPDATE REMIX_ARTIST
		SET NAME_LABEL = (SELECT LABEL.NAME 
							FROM ARTIST , REMIX_ARTIST , LABEL 
								WHERE ARTIST.ID = REMIX_ARTIST.ID_ARTIST AND REMIX_ARTIST.ID_REMIX = @TEMP AND ARTIST.ID_NOW_LABEL = LABEL.ID) 
			WHERE ID_REMIX = @TEMP;

	SET @TEMP = @TEMP  +1;
END


--SET LENGTH TRACK AND REMIX

DECLARE @TEMP INT
SET @TEMP = 55;
WHILE @TEMP < 63
BEGIN
	UPDATE TRACK
		SET LENGTH = '4:44'
			WHERE ID = @TEMP;

	SET @TEMP = @TEMP  +1;
END


DECLARE @TEMP INT
SET @TEMP = 80;
WHILE @TEMP < 112
BEGIN
	UPDATE REMIX
		SET LENGTH = '4:30'
			WHERE ID = @TEMP;

	SET @TEMP = @TEMP  +1;
END



--UPDATE DATA IN TRACK
DECLARE @TEMP INT
SET @TEMP = 1;
WHILE @TEMP < 73
BEGIN
	
	UPDATE TRACK
		SET GENRE = (SELECT NAME FROM GENRE WHERE ID = (SELECT FLOOR(RAND()*(17-1)+1)))
			WHERE ID = @TEMP
	
	SET @TEMP = @TEMP  +1;
END


--UPDATE DATA IN REMIX
DECLARE @TEMP INT
SET @TEMP = 1;
WHILE @TEMP < 162
BEGIN
	
	UPDATE REMIX
		SET GENRE = (SELECT NAME FROM GENRE WHERE ID = (SELECT FLOOR(RAND()*(17-1)+1)))
			WHERE ID = @TEMP
	
	SET @TEMP = @TEMP  +1;
END


--UPDATE  ARTIST_TRACK
DECLARE @TEMP INT
SET @TEMP = 1;
WHILE @TEMP < 73
BEGIN
	
	UPDATE TRACK_ARTIST
		SET NAME_TRACK = (SELECT NAME FROM TRACK WHERE ID = @TEMP)
			WHERE ID_TRACK = @TEMP
	
	SET @TEMP = @TEMP  +1;
END





						